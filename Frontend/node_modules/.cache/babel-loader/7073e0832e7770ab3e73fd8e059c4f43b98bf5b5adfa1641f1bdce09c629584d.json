{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kacha\\\\Downloads\\\\Agricultural_Management_System-main (1)\\\\Agricultural_Management_System-main\\\\React FrontEnd\\\\frontend\\\\src\\\\Components\\\\OrderDetails.js\",\n  _s = $RefreshSig$();\n// // // import React, { useEffect, useState } from 'react';\n// // // import { useNavigate } from 'react-router-dom';\n\n// // // const OrderDetails = () => {\n// // //   const [orderDetails, setOrderDetails] = useState([]);\n// // //   const [loading, setLoading] = useState(true);\n// // //   const [error, setError] = useState(null);\n// // //   const navigate = useNavigate();\n\n// // //   useEffect(() => {\n// // //     console.log('Fetching order details...');\n// // //     const token = sessionStorage.getItem('token'); // Replace 'authToken' with your actual token key\n// // //     fetch('http://localhost:4444/user/place-orderdetails', {\n// // //       method: 'GET',\n// // //       headers: {\n// // //         'Authorization': `${token}`\n// // //       }\n// // //     })\n// // //       .then(response => {\n// // //         console.log('Received response:', response);\n// // //         if (!response.ok) {\n// // //           throw new Error('Network response was not ok');\n// // //         }\n// // //         return response.json();\n// // //       })\n// // //       .then(data => {\n// // //         console.log('Received data:', data.data);\n// // //         setOrderDetails(data.data);\n// // //         setLoading(false);\n// // //       })\n// // //       .catch(error => {\n// // //         console.log('Error fetching data:', error);\n// // //         setError(error);\n// // //         setLoading(false);\n// // //       });\n// // //   }, []);\n\n// // //   const handlePayment = (orderId) => {\n// // //     // Redirect to payment page or trigger payment process\n// // //     navigate(`/payment?orderId=${orderId}`);\n// // //   };\n\n// // //   if (loading) {\n// // //     return <p>Loading...</p>;\n// // //   }\n\n// // //   if (error) {\n// // //     return <p>Error: {error.message}</p>;\n// // //   }\n\n// // //   return (\n// // //     <div style={{ backgroundImage: 'url(/images/orderdetailsavif.avif)', backgroundSize: 'cover', backgroundPosition: 'center', minHeight: '100vh', width: '100%', color: 'white', paddingTop: '10px' }}>\n// // //     <div className=\"container mt-5\">\n// // //       <h1 className=\"text-center mb-4\">Order Details</h1>\n// // //       <div className=\"row\">\n// // //         {orderDetails.map(order => (\n// // //           <div className=\"col-md-4 mb-4\" key={order.order_id}>\n// // //             <div className=\"card h-100\">\n// // //               <div className=\"card-body\">\n// // //                 <p className=\"card-text\">Total Amount: ₹{order.total_amount}</p>\n// // //                 <p className=\"card-text\">Order Status: {order.order_status}</p>\n// // //                 <p className=\"card-text\">Created At: {new Date(order.created_at).toLocaleDateString()}</p>\n// // //                 <button className=\"btn btn-primary mt-3\" onClick={() => handlePayment(order.order_id)}>Make Payment</button>\n// // //               </div>\n// // //             </div>\n// // //           </div>\n// // //         ))}\n// // //       </div>\n// // //     </div>\n// // //     </div>\n// // //   );\n// // // }\n\n// // // export default OrderDetails;\n\n// // import React, { useEffect, useState } from 'react';\n// // import { useLocation } from 'react-router-dom';\n\n// // const OrderDetails = () => {\n// //   const [orderDetails, setOrderDetails] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [error, setError] = useState(null);\n// //   const location = useLocation();\n// //   const orderDetailsFromState = location.state?.orderDetails;\n\n// //   useEffect(() => {\n// //     if (orderDetailsFromState) {\n// //       setOrderDetails(orderDetailsFromState);\n// //       setLoading(false);\n// //     } else {\n// //       console.log('Fetching order details...');\n// //       const token = sessionStorage.getItem('token'); // Replace 'authToken' with your actual token key\n// //       fetch('http://localhost:4444/user/place-orderdetails', {\n// //         method: 'GET',\n// //         headers: {\n// //           'Authorization': `${token}`\n// //         }\n// //       })\n// //         .then(response => {\n// //           if (!response.ok) {\n// //             throw new Error('Network response was not ok');\n// //           }\n// //           return response.json();\n// //         })\n// //         .then(data => {\n// //           setOrderDetails(data.data);\n// //           setLoading(false);\n// //         })\n// //         .catch(error => {\n// //           console.error('Error fetching data:', error);\n// //           setError(error);\n// //           setLoading(false);\n// //         });\n// //     }\n// //   }, [orderDetailsFromState]);\n\n// //   if (loading) {\n// //     return <p>Loading...</p>;\n// //   }\n\n// //   if (error) {\n// //     return <p>Error: {error.message}</p>;\n// //   }\n\n// //   return (\n// //     <div className=\"container mt-5\">\n// //       <h1 className=\"text-center mb-4\">Order Details</h1>\n// //       <div className=\"row\">\n// //         {orderDetails.map(order => (\n// //           <div className=\"col-md-4 mb-4\" key={order.order_id}>\n// //             <div className=\"card h-100\">\n// //               <div className=\"card-body\">\n// //                 <p className=\"card-text\">Total Amount: ₹{order.total_amount}</p>\n// //                 <p className=\"card-text\">Order Status: {order.order_status}</p>\n// //                 <p className=\"card-text\">Created At: {new Date(order.created_at).toLocaleDateString()}</p>\n// //               </div>\n// //             </div>\n// //           </div>\n// //         ))}\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // export default OrderDetails;\n\n// import React, { useEffect, useState } from 'react';\n// import { useLocation } from 'react-router-dom';\n\n// const OrderDetails = () => {\n//   const [orderDetails, setOrderDetails] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const location = useLocation();\n//   const orderDetailsFromState = location.state?.orderDetails;\n\n//   useEffect(() => {\n//     if (orderDetailsFromState) {\n//       setOrderDetails(orderDetailsFromState);\n//       setLoading(false);\n//     } else {\n//       console.log('Fetching order details...');\n//       const token = sessionStorage.getItem('token'); // Replace 'authToken' with your actual token key\n//       fetch('http://localhost:4444/user/place-orderdetails', {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `${token}`\n//         }\n//       })\n//         .then(response => {\n//           if (!response.ok) {\n//             throw new Error('Network response was not ok');\n//           }\n//           return response.json();\n//         })\n//         .then(data => {\n//           setOrderDetails(data.data);\n//           setLoading(false);\n//         })\n//         .catch(error => {\n//           console.error('Error fetching data:', error);\n//           setError(error);\n//           setLoading(false);\n//         });\n//     }\n//   }, [orderDetailsFromState]);\n\n//   if (loading) {\n//     return <p>Loading...</p>;\n//   }\n\n//   if (error) {\n//     return <p>Error: {error.message}</p>;\n//   }\n\n//   return (\n//     <div style={{ backgroundImage: 'url(/images/orderdetailsavif.avif)', backgroundSize: 'cover', backgroundPosition: 'center', minHeight: '100vh', width: '100%', color: 'white', paddingTop: '10px' }}>\n//       <div className=\"container mt-5\">\n//         <h1 className=\"text-center mb-4\">Order Details</h1>\n//         <div className=\"row\">\n//           {orderDetails.map(order => (\n//             <div className=\"col-md-4 mb-4\" key={order.order_id}>\n//               <div className=\"card h-100\">\n//                 <div className=\"card-body\">\n//                   <p className=\"card-text\">Total Amount: ₹{order.total_amount}</p>\n//                   <p className=\"card-text\">Order Status: {order.order_status}</p>\n//                   <p className=\"card-text\">Created At: {new Date(order.created_at).toLocaleDateString()}</p>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default OrderDetails;\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderDetails = () => {\n  _s();\n  var _location$state;\n  const [orderDetails, setOrderDetails] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const orderDetailsFromState = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.orderDetails;\n  useEffect(() => {\n    if (orderDetailsFromState) {\n      setOrderDetails(orderDetailsFromState);\n      setLoading(false);\n    } else {\n      console.log('Fetching order details...');\n      const token = sessionStorage.getItem('token'); // Replace 'authToken' with your actual token key\n      fetch('http://localhost:4444/user/place-orderdetails', {\n        method: 'GET',\n        headers: {\n          'Authorization': `${token}`\n        }\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(data => {\n        setOrderDetails(data.data);\n        setLoading(false);\n      }).catch(error => {\n        console.error('Error fetching data:', error);\n        setError(error);\n        setLoading(false);\n      });\n    }\n  }, [orderDetailsFromState]);\n  const handleRemoveOrder = order_id => {\n    const token = sessionStorage.getItem('token');\n    console.log(`Removing order with order_id: ${order_id}`);\n    fetch(`http://localhost:4444/user/order/${order_id}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `${token}`\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      console.log(`Order with order_id: ${order_id} removed successfully`);\n      // Remove the order from the state\n      setOrderDetails(orderDetails.filter(order => order.order_id !== order_id));\n    }).catch(error => {\n      console.error('Error removing order:', error);\n    });\n  };\n  const handlePayment = order_id => {\n    // Redirect to payment page or trigger payment process\n    navigate(`/payment?orderId=${order_id}`);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: 'url(/images/orderdetailsavif.avif)',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      minHeight: '100vh',\n      width: '100%',\n      color: 'white',\n      paddingTop: '10px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mb-4\",\n        children: \"Order Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: orderDetails.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card h-100\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Total Amount: \\u20B9\", order.total_amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Order Status: \", order.order_status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Created At: \", new Date(order.created_at).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger mt-3\",\n                onClick: () => handleRemoveOrder(order.order_id),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary mt-3\",\n                onClick: () => handlePayment(order.order_id),\n                children: \"Make Payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)\n        }, order.order_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderDetails, \"Qrb0pTzfC1E6fJpCvWG008kDkNc=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = OrderDetails;\nexport default OrderDetails;\nvar _c;\n$RefreshReg$(_c, \"OrderDetails\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","OrderDetails","_s","_location$state","orderDetails","setOrderDetails","loading","setLoading","error","setError","location","navigate","orderDetailsFromState","state","console","log","token","sessionStorage","getItem","fetch","method","headers","then","response","ok","Error","json","data","catch","handleRemoveOrder","order_id","filter","order","handlePayment","children","fileName","_jsxFileName","lineNumber","columnNumber","message","style","backgroundImage","backgroundSize","backgroundPosition","minHeight","width","color","paddingTop","className","map","total_amount","order_status","Date","created_at","toLocaleDateString","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kacha/Downloads/Agricultural_Management_System-main (1)/Agricultural_Management_System-main/React FrontEnd/frontend/src/Components/OrderDetails.js"],"sourcesContent":["// // // import React, { useEffect, useState } from 'react';\n// // // import { useNavigate } from 'react-router-dom';\n\n// // // const OrderDetails = () => {\n// // //   const [orderDetails, setOrderDetails] = useState([]);\n// // //   const [loading, setLoading] = useState(true);\n// // //   const [error, setError] = useState(null);\n// // //   const navigate = useNavigate();\n\n// // //   useEffect(() => {\n// // //     console.log('Fetching order details...');\n// // //     const token = sessionStorage.getItem('token'); // Replace 'authToken' with your actual token key\n// // //     fetch('http://localhost:4444/user/place-orderdetails', {\n// // //       method: 'GET',\n// // //       headers: {\n// // //         'Authorization': `${token}`\n// // //       }\n// // //     })\n// // //       .then(response => {\n// // //         console.log('Received response:', response);\n// // //         if (!response.ok) {\n// // //           throw new Error('Network response was not ok');\n// // //         }\n// // //         return response.json();\n// // //       })\n// // //       .then(data => {\n// // //         console.log('Received data:', data.data);\n// // //         setOrderDetails(data.data);\n// // //         setLoading(false);\n// // //       })\n// // //       .catch(error => {\n// // //         console.log('Error fetching data:', error);\n// // //         setError(error);\n// // //         setLoading(false);\n// // //       });\n// // //   }, []);\n\n// // //   const handlePayment = (orderId) => {\n// // //     // Redirect to payment page or trigger payment process\n// // //     navigate(`/payment?orderId=${orderId}`);\n// // //   };\n\n// // //   if (loading) {\n// // //     return <p>Loading...</p>;\n// // //   }\n\n// // //   if (error) {\n// // //     return <p>Error: {error.message}</p>;\n// // //   }\n\n// // //   return (\n// // //     <div style={{ backgroundImage: 'url(/images/orderdetailsavif.avif)', backgroundSize: 'cover', backgroundPosition: 'center', minHeight: '100vh', width: '100%', color: 'white', paddingTop: '10px' }}>\n// // //     <div className=\"container mt-5\">\n// // //       <h1 className=\"text-center mb-4\">Order Details</h1>\n// // //       <div className=\"row\">\n// // //         {orderDetails.map(order => (\n// // //           <div className=\"col-md-4 mb-4\" key={order.order_id}>\n// // //             <div className=\"card h-100\">\n// // //               <div className=\"card-body\">\n// // //                 <p className=\"card-text\">Total Amount: ₹{order.total_amount}</p>\n// // //                 <p className=\"card-text\">Order Status: {order.order_status}</p>\n// // //                 <p className=\"card-text\">Created At: {new Date(order.created_at).toLocaleDateString()}</p>\n// // //                 <button className=\"btn btn-primary mt-3\" onClick={() => handlePayment(order.order_id)}>Make Payment</button>\n// // //               </div>\n// // //             </div>\n// // //           </div>\n// // //         ))}\n// // //       </div>\n// // //     </div>\n// // //     </div>\n// // //   );\n// // // }\n\n// // // export default OrderDetails;\n\n// // import React, { useEffect, useState } from 'react';\n// // import { useLocation } from 'react-router-dom';\n\n// // const OrderDetails = () => {\n// //   const [orderDetails, setOrderDetails] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [error, setError] = useState(null);\n// //   const location = useLocation();\n// //   const orderDetailsFromState = location.state?.orderDetails;\n\n// //   useEffect(() => {\n// //     if (orderDetailsFromState) {\n// //       setOrderDetails(orderDetailsFromState);\n// //       setLoading(false);\n// //     } else {\n// //       console.log('Fetching order details...');\n// //       const token = sessionStorage.getItem('token'); // Replace 'authToken' with your actual token key\n// //       fetch('http://localhost:4444/user/place-orderdetails', {\n// //         method: 'GET',\n// //         headers: {\n// //           'Authorization': `${token}`\n// //         }\n// //       })\n// //         .then(response => {\n// //           if (!response.ok) {\n// //             throw new Error('Network response was not ok');\n// //           }\n// //           return response.json();\n// //         })\n// //         .then(data => {\n// //           setOrderDetails(data.data);\n// //           setLoading(false);\n// //         })\n// //         .catch(error => {\n// //           console.error('Error fetching data:', error);\n// //           setError(error);\n// //           setLoading(false);\n// //         });\n// //     }\n// //   }, [orderDetailsFromState]);\n\n// //   if (loading) {\n// //     return <p>Loading...</p>;\n// //   }\n\n// //   if (error) {\n// //     return <p>Error: {error.message}</p>;\n// //   }\n\n// //   return (\n// //     <div className=\"container mt-5\">\n// //       <h1 className=\"text-center mb-4\">Order Details</h1>\n// //       <div className=\"row\">\n// //         {orderDetails.map(order => (\n// //           <div className=\"col-md-4 mb-4\" key={order.order_id}>\n// //             <div className=\"card h-100\">\n// //               <div className=\"card-body\">\n// //                 <p className=\"card-text\">Total Amount: ₹{order.total_amount}</p>\n// //                 <p className=\"card-text\">Order Status: {order.order_status}</p>\n// //                 <p className=\"card-text\">Created At: {new Date(order.created_at).toLocaleDateString()}</p>\n// //               </div>\n// //             </div>\n// //           </div>\n// //         ))}\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // export default OrderDetails;\n\n// import React, { useEffect, useState } from 'react';\n// import { useLocation } from 'react-router-dom';\n\n// const OrderDetails = () => {\n//   const [orderDetails, setOrderDetails] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const location = useLocation();\n//   const orderDetailsFromState = location.state?.orderDetails;\n\n//   useEffect(() => {\n//     if (orderDetailsFromState) {\n//       setOrderDetails(orderDetailsFromState);\n//       setLoading(false);\n//     } else {\n//       console.log('Fetching order details...');\n//       const token = sessionStorage.getItem('token'); // Replace 'authToken' with your actual token key\n//       fetch('http://localhost:4444/user/place-orderdetails', {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `${token}`\n//         }\n//       })\n//         .then(response => {\n//           if (!response.ok) {\n//             throw new Error('Network response was not ok');\n//           }\n//           return response.json();\n//         })\n//         .then(data => {\n//           setOrderDetails(data.data);\n//           setLoading(false);\n//         })\n//         .catch(error => {\n//           console.error('Error fetching data:', error);\n//           setError(error);\n//           setLoading(false);\n//         });\n//     }\n//   }, [orderDetailsFromState]);\n\n//   if (loading) {\n//     return <p>Loading...</p>;\n//   }\n\n//   if (error) {\n//     return <p>Error: {error.message}</p>;\n//   }\n\n//   return (\n//     <div style={{ backgroundImage: 'url(/images/orderdetailsavif.avif)', backgroundSize: 'cover', backgroundPosition: 'center', minHeight: '100vh', width: '100%', color: 'white', paddingTop: '10px' }}>\n//       <div className=\"container mt-5\">\n//         <h1 className=\"text-center mb-4\">Order Details</h1>\n//         <div className=\"row\">\n//           {orderDetails.map(order => (\n//             <div className=\"col-md-4 mb-4\" key={order.order_id}>\n//               <div className=\"card h-100\">\n//                 <div className=\"card-body\">\n//                   <p className=\"card-text\">Total Amount: ₹{order.total_amount}</p>\n//                   <p className=\"card-text\">Order Status: {order.order_status}</p>\n//                   <p className=\"card-text\">Created At: {new Date(order.created_at).toLocaleDateString()}</p>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default OrderDetails;\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst OrderDetails = () => {\n  const [orderDetails, setOrderDetails] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const orderDetailsFromState = location.state?.orderDetails;\n\n  useEffect(() => {\n    if (orderDetailsFromState) {\n      setOrderDetails(orderDetailsFromState);\n      setLoading(false);\n    } else {\n      console.log('Fetching order details...');\n      const token = sessionStorage.getItem('token'); // Replace 'authToken' with your actual token key\n      fetch('http://localhost:4444/user/place-orderdetails', {\n        method: 'GET',\n        headers: {\n          'Authorization': `${token}`\n        }\n      })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => {\n          setOrderDetails(data.data);\n          setLoading(false);\n        })\n        .catch(error => {\n          console.error('Error fetching data:', error);\n          setError(error);\n          setLoading(false);\n        });\n    }\n  }, [orderDetailsFromState]);\n\n  const handleRemoveOrder = (order_id) => {\n    const token = sessionStorage.getItem('token');\n    console.log(`Removing order with order_id: ${order_id}`);\n    fetch(`http://localhost:4444/user/order/${order_id}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `${token}`\n      }\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        console.log(`Order with order_id: ${order_id} removed successfully`);\n        // Remove the order from the state\n        setOrderDetails(orderDetails.filter(order => order.order_id !== order_id));\n      })\n      .catch(error => {\n        console.error('Error removing order:', error);\n      });\n  };\n\n  const handlePayment = (order_id) => {\n    // Redirect to payment page or trigger payment process\n    navigate(`/payment?orderId=${order_id}`);\n  };\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>Error: {error.message}</p>;\n  }\n\n  return (\n    <div style={{ backgroundImage: 'url(/images/orderdetailsavif.avif)', backgroundSize: 'cover', backgroundPosition: 'center', minHeight: '100vh', width: '100%', color: 'white', paddingTop: '10px' }}>\n      <div className=\"container mt-5\">\n        <h1 className=\"text-center mb-4\">Order Details</h1>\n        <div className=\"row\">\n          {orderDetails.map(order => (\n            <div className=\"col-md-4 mb-4\" key={order.order_id}>\n              <div className=\"card h-100\">\n                <div className=\"card-body\">\n                  <p className=\"card-text\">Total Amount: ₹{order.total_amount}</p>\n                  <p className=\"card-text\">Order Status: {order.order_status}</p>\n                  <p className=\"card-text\">Created At: {new Date(order.created_at).toLocaleDateString()}</p>\n                  <button className=\"btn btn-danger mt-3\" onClick={() => handleRemoveOrder(order.order_id)}>Remove</button>\n                  <button className=\"btn btn-primary mt-3\" onClick={() => handlePayment(order.order_id)}>Make Payment</button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OrderDetails;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,qBAAqB,IAAAT,eAAA,GAAGO,QAAQ,CAACG,KAAK,cAAAV,eAAA,uBAAdA,eAAA,CAAgBC,YAAY;EAE1DT,SAAS,CAAC,MAAM;IACd,IAAIiB,qBAAqB,EAAE;MACzBP,eAAe,CAACO,qBAAqB,CAAC;MACtCL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,MAAM;MACLO,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxC,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC/CC,KAAK,CAAC,+CAA+C,EAAE;QACrDC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,eAAe,EAAE,GAAGL,KAAK;QAC3B;MACF,CAAC,CAAC,CACCM,IAAI,CAACC,QAAQ,IAAI;QAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;QACZtB,eAAe,CAACsB,IAAI,CAACA,IAAI,CAAC;QAC1BpB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,CACDqB,KAAK,CAACpB,KAAK,IAAI;QACdM,OAAO,CAACN,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CC,QAAQ,CAACD,KAAK,CAAC;QACfD,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACK,qBAAqB,CAAC,CAAC;EAE3B,MAAMiB,iBAAiB,GAAIC,QAAQ,IAAK;IACtC,MAAMd,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAC7CJ,OAAO,CAACC,GAAG,CAAC,iCAAiCe,QAAQ,EAAE,CAAC;IACxDX,KAAK,CAAC,oCAAoCW,QAAQ,EAAE,EAAE;MACpDV,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,eAAe,EAAE,GAAGL,KAAK;MAC3B;IACF,CAAC,CAAC,CACCM,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACAX,OAAO,CAACC,GAAG,CAAC,wBAAwBe,QAAQ,uBAAuB,CAAC;MACpE;MACAzB,eAAe,CAACD,YAAY,CAAC2B,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACF,QAAQ,KAAKA,QAAQ,CAAC,CAAC;IAC5E,CAAC,CAAC,CACDF,KAAK,CAACpB,KAAK,IAAI;MACdM,OAAO,CAACN,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC;EAED,MAAMyB,aAAa,GAAIH,QAAQ,IAAK;IAClC;IACAnB,QAAQ,CAAC,oBAAoBmB,QAAQ,EAAE,CAAC;EAC1C,CAAC;EAED,IAAIxB,OAAO,EAAE;IACX,oBAAON,OAAA;MAAAkC,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,IAAI9B,KAAK,EAAE;IACT,oBAAOR,OAAA;MAAAkC,QAAA,GAAG,SAAO,EAAC1B,KAAK,CAAC+B,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACtC;EAEA,oBACEtC,OAAA;IAAKwC,KAAK,EAAE;MAAEC,eAAe,EAAE,oCAAoC;MAAEC,cAAc,EAAE,OAAO;MAAEC,kBAAkB,EAAE,QAAQ;MAAEC,SAAS,EAAE,OAAO;MAAEC,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE,OAAO;MAAEC,UAAU,EAAE;IAAO,CAAE;IAAAb,QAAA,eAClMlC,OAAA;MAAKgD,SAAS,EAAC,gBAAgB;MAAAd,QAAA,gBAC7BlC,OAAA;QAAIgD,SAAS,EAAC,kBAAkB;QAAAd,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnDtC,OAAA;QAAKgD,SAAS,EAAC,KAAK;QAAAd,QAAA,EACjB9B,YAAY,CAAC6C,GAAG,CAACjB,KAAK,iBACrBhC,OAAA;UAAKgD,SAAS,EAAC,eAAe;UAAAd,QAAA,eAC5BlC,OAAA;YAAKgD,SAAS,EAAC,YAAY;YAAAd,QAAA,eACzBlC,OAAA;cAAKgD,SAAS,EAAC,WAAW;cAAAd,QAAA,gBACxBlC,OAAA;gBAAGgD,SAAS,EAAC,WAAW;gBAAAd,QAAA,GAAC,sBAAe,EAACF,KAAK,CAACkB,YAAY;cAAA;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChEtC,OAAA;gBAAGgD,SAAS,EAAC,WAAW;gBAAAd,QAAA,GAAC,gBAAc,EAACF,KAAK,CAACmB,YAAY;cAAA;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC/DtC,OAAA;gBAAGgD,SAAS,EAAC,WAAW;gBAAAd,QAAA,GAAC,cAAY,EAAC,IAAIkB,IAAI,CAACpB,KAAK,CAACqB,UAAU,CAAC,CAACC,kBAAkB,CAAC,CAAC;cAAA;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC1FtC,OAAA;gBAAQgD,SAAS,EAAC,qBAAqB;gBAACO,OAAO,EAAEA,CAAA,KAAM1B,iBAAiB,CAACG,KAAK,CAACF,QAAQ,CAAE;gBAAAI,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACzGtC,OAAA;gBAAQgD,SAAS,EAAC,sBAAsB;gBAACO,OAAO,EAAEA,CAAA,KAAMtB,aAAa,CAACD,KAAK,CAACF,QAAQ,CAAE;gBAAAI,QAAA,EAAC;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAT4BN,KAAK,CAACF,QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAU7C,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAApC,EAAA,CAhGKD,YAAY;EAAA,QAICJ,WAAW,EACXC,WAAW;AAAA;AAAA0D,EAAA,GALxBvD,YAAY;AAkGlB,eAAeA,YAAY;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}