{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kacha\\\\Downloads\\\\Agricultural_Management_System-main (1)\\\\Agricultural_Management_System-main\\\\React FrontEnd\\\\frontend\\\\src\\\\Components\\\\Cart.js\",\n  _s = $RefreshSig$();\n// // import React, { useEffect, useState } from 'react';\n// // import { useLocation, useNavigate } from 'react-router-dom';\n// // import 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\n\n// // const Cart = () => {\n// //   const [cartItems, setCartItems] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [error, setError] = useState(null);\n// //   const [selectedProduct, setSelectedProduct] = useState(null);\n// //   const location = useLocation();\n// //   const navigate = useNavigate();\n\n// //   useEffect(() => {\n// //     console.log('Fetching cart items...');\n// //     const token = sessionStorage.getItem('token');\n// //     fetch('http://localhost:4444/user/cart', {\n// //       method: 'GET',\n// //       headers: {\n// //         'Authorization': `${token}`\n// //       }\n// //     }) // Ensure the API endpoint is correct\n// //       .then(response => {\n// //         console.log('Received response:', response);\n// //         if (!response.ok) {\n// //           throw new Error('Network response was not ok');\n// //         }\n// //         return response.json();\n// //       })\n// //       .then(data => {\n// //         console.log('Received data:', data);\n// //         setCartItems(data.data);\n// //         setLoading(false);\n// //       })\n// //       .catch(error => {\n// //         console.error('Error fetching data:', error);\n// //         setError(error);\n// //         setLoading(false);\n// //       });\n\n// //     // Check if there's a selected product passed from the Products page\n// //     if (location.state && location.state.selectedProduct) {\n// //       setSelectedProduct(location.state.selectedProduct);\n// //     }\n// //   }, [location.state]);\n\n// //   const handleRemoveItem = (cart_id) => {\n// //     const token = sessionStorage.getItem('token');\n// //     fetch(`http://localhost:4444/user/cart/${cart_id}`, {\n// //       method: 'DELETE',\n// //       headers: {\n// //         'Authorization': `${token}`\n// //       }\n// //     })\n// //       .then(response => {\n// //         if (!response.ok) {\n// //           throw new Error('Network response was not ok');\n// //         }\n// //         // Remove the item from the state\n// //         setCartItems(cartItems.filter(item => item.cart_id !== id));\n// //       })\n// //       .catch(error => {\n// //         console.error('Error removing item:', error);\n// //       });\n// //   };\n\n// //   const fetchProductDetails = (productId) => {\n// //     return fetch(`http://localhost:4444/user/product/${productId}`) // Ensure the API endpoint is correct\n// //       .then(response => {\n// //         if (!response.ok) {\n// //           throw new Error('Network response was not ok');\n// //         }\n// //         return response.json();\n// //       })\n// //       .then(data => data.data)\n// //       .catch(error => {\n// //         console.error('Error fetching product details:', error);\n// //         throw error;\n// //       });\n// //   };\n\n// //   useEffect(() => {\n// //     const fetchAllProductDetails = async () => {\n// //       try {\n// //         const updatedCartItems = await Promise.all(\n// //           cartItems.map(async (item) => {\n// //             const productDetails = await fetchProductDetails(item.product_id);\n// //             return { ...item, ...productDetails };\n// //           })\n// //         );\n// //         setCartItems(updatedCartItems);\n// //       } catch (error) {\n// //         console.error('Error fetching all product details:', error);\n// //       }\n// //     };\n\n// //     if (cartItems.length > 0) {\n// //       fetchAllProductDetails();\n// //     }\n// //   }, [cartItems]);\n\n// //   if (loading) {\n// //     return <p>Loading...</p>;\n// //   }\n\n// //   if (error) {\n// //     return <p>Error: {error.message}</p>;\n// //   }\n\n// //   return (\n// //     <div style={{ backgroundImage: 'url(/images/cart3.avif)', backgroundSize: 'cover', backgroundPosition: 'center', minHeight: '100vh', width: '100%', color: 'white', paddingTop: '10px' }}>\n// //       <div className=\"container mt-5\">\n// //         <h1 className=\"text-center mb-4\">Cart</h1>\n// //         <div className=\"row\">\n// //           {selectedProduct && (\n// //             <div className=\"col-md-4 mb-4\">\n// //               <div className=\"card h-100\">\n// //                 <img src={\"Backend/uploads/image.png\"} className=\"card-img-top\" alt={selectedProduct.name} />\n// //                 <div className=\"card-body\">\n// //                   <h5 className=\"card-title\">{selectedProduct.name}</h5>\n// //                   <p className=\"card-text\">Description: {selectedProduct.description}</p>\n// //                   <p className=\"card-text\">Price: ₹{selectedProduct.price}</p>\n// //                   <button className=\"btn btn-danger\" onClick={() => handleRemoveItem(selectedProduct.cart_id)}>Remove</button>\n// //                   <button className=\"btn btn-secondary\" onClick={() => setSelectedProduct(null)}>Back to Cart</button>\n// //                 </div>\n// //               </div>\n// //             </div>\n// //           )}\n// //           {cartItems.map(item => (\n// //             <div className=\"col-md-4 mb-4\" key={item.cart_id}>\n// //               <div className=\"card h-100\">\n// //                 <img src={item.images} className=\"card-img-top\" alt={item.name} />\n// //                 <div className=\"card-body\">\n// //                   <h5 className=\"card-title\">{item.name}</h5>\n// //                   <p className=\"card-text\">Description: {item.description}</p>\n// //                   <p className=\"card-text\">Price: ₹{item.price}</p>\n// //                   <button className=\"btn btn-danger\" onClick={() => handleRemoveItem(item.cart_id)}>Remove</button>\n// //                 </div>\n// //               </div>\n// //             </div>\n// //           ))}\n// //         </div>\n// //         <button className=\"btn btn-primary mt-4\" onClick={() => navigate('/Product')}>Back to Products</button>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Cart;\n\n// import React, { useEffect, useState } from 'react';\n// import { useLocation, useNavigate } from 'react-router-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\n\n// const Cart = () => {\n//   const [cartItems, setCartItems] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [selectedProduct, setSelectedProduct] = useState(null);\n//   const location = useLocation();\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     console.log('Fetching cart items...');\n//     const token = sessionStorage.getItem('token');\n//     fetch('http://localhost:4444/user/cart', {\n//       method: 'GET',\n//       headers: {\n//         'Authorization': `${token}`\n//       }\n//     })\n//       .then(response => {\n//         console.log('Received response:', response);\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n//         return response.json();\n//       })\n//       .then(data => {\n//         console.log('Received data:', data);\n//         setCartItems(data.data);\n//         setLoading(false);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching data:', error);\n//         setError(error);\n//         setLoading(false);\n//       });\n\n//     // Check if there's a selected product passed from the Products page\n//     if (location.state && location.state.selectedProduct) {\n//       setSelectedProduct(location.state.selectedProduct);\n//     }\n//   }, [location.state]);\n\n//   const handleRemoveItem = (cart_id) => {\n//     const token = sessionStorage.getItem('token');\n//     console.log(`Removing item with cart_id: ${cart_id}`);\n//     fetch(`http://localhost:4444/user/cart/${cart_id}`, {\n//       method: 'DELETE',\n//       headers: {\n//         'Authorization': `${token}`\n//       }\n//     })\n//       .then(response => {\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n//         console.log(`Item with cart_id: ${cart_id} removed successfully`);\n//         // Remove the item from the state\n//         setCartItems(cartItems.filter(item => item.cart_id !== cart_id));\n//       })\n//       .catch(error => {\n//         console.error('Error removing item:', error);\n//       });\n//   };\n\n//   const fetchProductDetails = (productId) => {\n//     return fetch(`http://localhost:4444/user/product/${productId}`) // Ensure the API endpoint is correct\n//       .then(response => {\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n//         return response.json();\n//       })\n//       .then(data => data.data)\n//       .catch(error => {\n//         console.error('Error fetching product details:', error);\n//         throw error;\n//       });\n//   };\n\n//   useEffect(() => {\n//     const fetchAllProductDetails = async () => {\n//       try {\n//         const updatedCartItems = await Promise.all(\n//           cartItems.map(async (item) => {\n//             const productDetails = await fetchProductDetails(item.product_id);\n//             return { ...item, ...productDetails };\n//           })\n//         );\n//         setCartItems(updatedCartItems);\n//       } catch (error) {\n//         console.error('Error fetching all product details:', error);\n//       }\n//     };\n\n//     if (cartItems.length > 0) {\n//       fetchAllProductDetails();\n//     }\n//   }, [cartItems]);\n\n//   if (loading) {\n//     return <p>Loading...</p>;\n//   }\n\n//   if (error) {\n//     return <p>Error: {error.message}</p>;\n//   }\n\n//   return (\n//     <div style={{ backgroundImage: 'url(/images/cart3.avif)', backgroundSize: 'cover', backgroundPosition: 'center', minHeight: '100vh', width: '100%', color: 'white', paddingTop: '10px' }}>\n//       <div className=\"container mt-5\">\n//         <h1 className=\"text-center mb-4\">Cart</h1>\n//         <div className=\"row\">\n//           {selectedProduct && (\n//             <div className=\"col-md-4 mb-4\">\n//               <div className=\"card h-100\">\n//                 <img src={\"Backend/uploads/image.png\"} className=\"card-img-top\" alt={selectedProduct.name} />\n//                 <div className=\"card-body\">\n//                   <h5 className=\"card-title\">{selectedProduct.name}</h5>\n//                   <p className=\"card-text\">Description: {selectedProduct.description}</p>\n//                   <p className=\"card-text\">Price: ₹{selectedProduct.price}</p>\n//                   <button className=\"btn btn-danger\" onClick={() => handleRemoveItem(selectedProduct.cart_id)}>Remove</button>\n//                   <button className=\"btn btn-secondary\" onClick={() => setSelectedProduct(null)}>Back to Cart</button>\n//                 </div>\n//               </div>\n//             </div>\n//           )}\n//           {cartItems.map(item => (\n//             <div className=\"col-md-4 mb-4\" key={item.cart_id}>\n//               <div className=\"card h-100\">\n//                 <img src={item.images} className=\"card-img-top\" alt={item.name} />\n//                 <div className=\"card-body\">\n//                   <h5 className=\"card-title\">{item.name}</h5>\n//                   <p className=\"card-text\">Description: {item.description}</p>\n//                   <p className=\"card-text\">Price: ₹{item.price}</p>\n//                   <button className=\"btn btn-danger\" onClick={() => handleRemoveItem(item.cart_id)}>Remove</button>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//         <button className=\"btn btn-primary mt-4\" onClick={() => navigate('/Product')}>Back to Products</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Cart;\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log('Fetching cart items...');\n    const token = sessionStorage.getItem('token');\n    fetch('http://localhost:4444/user/cart', {\n      method: 'GET',\n      headers: {\n        'Authorization': `${token}`\n      }\n    }).then(response => {\n      console.log('Received response:', response);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Received data:', data);\n      setCartItems(data.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setError(error);\n      setLoading(false);\n    });\n\n    // Check if there's a selected product passed from the Products page\n    if (location.state && location.state.selectedProduct) {\n      setSelectedProduct(location.state.selectedProduct);\n    }\n  }, [location.state]);\n  const handleRemoveItem = cart_id => {\n    const token = sessionStorage.getItem('token');\n    console.log(`Removing item with cart_id: ${cart_id}`);\n    fetch(`http://localhost:4444/user/cart/${cart_id}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `${token}`\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      console.log(`Item with cart_id: ${cart_id} removed successfully`);\n      // Remove the item from the state\n      setCartItems(cartItems.filter(item => item.cart_id !== cart_id));\n    }).catch(error => {\n      console.error('Error removing item:', error);\n    });\n  };\n  const fetchProductDetails = productId => {\n    return fetch(`http://localhost:4444/user/product/${productId}`) // Ensure the API endpoint is correct\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => data.data).catch(error => {\n      console.error('Error fetching product details:', error);\n      throw error;\n    });\n  };\n  useEffect(() => {\n    const fetchAllProductDetails = async () => {\n      try {\n        const updatedCartItems = await Promise.all(cartItems.map(async item => {\n          const productDetails = await fetchProductDetails(item.product_id);\n          return {\n            ...item,\n            ...productDetails\n          };\n        }));\n        setCartItems(updatedCartItems);\n      } catch (error) {\n        console.error('Error fetching all product details:', error);\n      }\n    };\n    if (cartItems.length > 0) {\n      fetchAllProductDetails();\n    }\n  }, [cartItems]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: 'url(/images/cart3.avif)',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      minHeight: '100vh',\n      width: '100%',\n      color: 'white',\n      paddingTop: '10px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mb-4\",\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [selectedProduct && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card h-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"Backend/uploads/image.png\",\n              className: \"card-img-top\",\n              alt: selectedProduct.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: selectedProduct.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Description: \", selectedProduct.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Price: \\u20B9\", selectedProduct.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => handleRemoveItem(selectedProduct.cart_id),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary\",\n                onClick: () => setSelectedProduct(null),\n                children: \"Back to Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this), cartItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card h-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              width: 150,\n              height: 150,\n              src: `http://localhost:4444/images/${item.images}`,\n              className: \"card-img-top\",\n              alt: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Description: \", item.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Price: \\u20B9\", item.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => handleRemoveItem(item.cart_id),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this)\n        }, item.cart_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-4\",\n        onClick: () => navigate('/Product'),\n        children: \"Back to Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 412,\n    columnNumber: 5\n  }, this);\n};\n_s(Cart, \"GXaIcFsnkQf15CkeAbgV7HZpYKI=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","Cart","_s","cartItems","setCartItems","loading","setLoading","error","setError","selectedProduct","setSelectedProduct","location","navigate","console","log","token","sessionStorage","getItem","fetch","method","headers","then","response","ok","Error","json","data","catch","state","handleRemoveItem","cart_id","filter","item","fetchProductDetails","productId","fetchAllProductDetails","updatedCartItems","Promise","all","map","productDetails","product_id","length","children","fileName","_jsxFileName","lineNumber","columnNumber","message","style","backgroundImage","backgroundSize","backgroundPosition","minHeight","width","color","paddingTop","className","src","alt","name","description","price","onClick","height","images","_c","$RefreshReg$"],"sources":["C:/Users/kacha/Downloads/Agricultural_Management_System-main (1)/Agricultural_Management_System-main/React FrontEnd/frontend/src/Components/Cart.js"],"sourcesContent":["// // import React, { useEffect, useState } from 'react';\n// // import { useLocation, useNavigate } from 'react-router-dom';\n// // import 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\n\n// // const Cart = () => {\n// //   const [cartItems, setCartItems] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [error, setError] = useState(null);\n// //   const [selectedProduct, setSelectedProduct] = useState(null);\n// //   const location = useLocation();\n// //   const navigate = useNavigate();\n\n// //   useEffect(() => {\n// //     console.log('Fetching cart items...');\n// //     const token = sessionStorage.getItem('token');\n// //     fetch('http://localhost:4444/user/cart', {\n// //       method: 'GET',\n// //       headers: {\n// //         'Authorization': `${token}`\n// //       }\n// //     }) // Ensure the API endpoint is correct\n// //       .then(response => {\n// //         console.log('Received response:', response);\n// //         if (!response.ok) {\n// //           throw new Error('Network response was not ok');\n// //         }\n// //         return response.json();\n// //       })\n// //       .then(data => {\n// //         console.log('Received data:', data);\n// //         setCartItems(data.data);\n// //         setLoading(false);\n// //       })\n// //       .catch(error => {\n// //         console.error('Error fetching data:', error);\n// //         setError(error);\n// //         setLoading(false);\n// //       });\n\n// //     // Check if there's a selected product passed from the Products page\n// //     if (location.state && location.state.selectedProduct) {\n// //       setSelectedProduct(location.state.selectedProduct);\n// //     }\n// //   }, [location.state]);\n\n// //   const handleRemoveItem = (cart_id) => {\n// //     const token = sessionStorage.getItem('token');\n// //     fetch(`http://localhost:4444/user/cart/${cart_id}`, {\n// //       method: 'DELETE',\n// //       headers: {\n// //         'Authorization': `${token}`\n// //       }\n// //     })\n// //       .then(response => {\n// //         if (!response.ok) {\n// //           throw new Error('Network response was not ok');\n// //         }\n// //         // Remove the item from the state\n// //         setCartItems(cartItems.filter(item => item.cart_id !== id));\n// //       })\n// //       .catch(error => {\n// //         console.error('Error removing item:', error);\n// //       });\n// //   };\n\n// //   const fetchProductDetails = (productId) => {\n// //     return fetch(`http://localhost:4444/user/product/${productId}`) // Ensure the API endpoint is correct\n// //       .then(response => {\n// //         if (!response.ok) {\n// //           throw new Error('Network response was not ok');\n// //         }\n// //         return response.json();\n// //       })\n// //       .then(data => data.data)\n// //       .catch(error => {\n// //         console.error('Error fetching product details:', error);\n// //         throw error;\n// //       });\n// //   };\n\n// //   useEffect(() => {\n// //     const fetchAllProductDetails = async () => {\n// //       try {\n// //         const updatedCartItems = await Promise.all(\n// //           cartItems.map(async (item) => {\n// //             const productDetails = await fetchProductDetails(item.product_id);\n// //             return { ...item, ...productDetails };\n// //           })\n// //         );\n// //         setCartItems(updatedCartItems);\n// //       } catch (error) {\n// //         console.error('Error fetching all product details:', error);\n// //       }\n// //     };\n\n// //     if (cartItems.length > 0) {\n// //       fetchAllProductDetails();\n// //     }\n// //   }, [cartItems]);\n\n// //   if (loading) {\n// //     return <p>Loading...</p>;\n// //   }\n\n// //   if (error) {\n// //     return <p>Error: {error.message}</p>;\n// //   }\n\n// //   return (\n// //     <div style={{ backgroundImage: 'url(/images/cart3.avif)', backgroundSize: 'cover', backgroundPosition: 'center', minHeight: '100vh', width: '100%', color: 'white', paddingTop: '10px' }}>\n// //       <div className=\"container mt-5\">\n// //         <h1 className=\"text-center mb-4\">Cart</h1>\n// //         <div className=\"row\">\n// //           {selectedProduct && (\n// //             <div className=\"col-md-4 mb-4\">\n// //               <div className=\"card h-100\">\n// //                 <img src={\"Backend/uploads/image.png\"} className=\"card-img-top\" alt={selectedProduct.name} />\n// //                 <div className=\"card-body\">\n// //                   <h5 className=\"card-title\">{selectedProduct.name}</h5>\n// //                   <p className=\"card-text\">Description: {selectedProduct.description}</p>\n// //                   <p className=\"card-text\">Price: ₹{selectedProduct.price}</p>\n// //                   <button className=\"btn btn-danger\" onClick={() => handleRemoveItem(selectedProduct.cart_id)}>Remove</button>\n// //                   <button className=\"btn btn-secondary\" onClick={() => setSelectedProduct(null)}>Back to Cart</button>\n// //                 </div>\n// //               </div>\n// //             </div>\n// //           )}\n// //           {cartItems.map(item => (\n// //             <div className=\"col-md-4 mb-4\" key={item.cart_id}>\n// //               <div className=\"card h-100\">\n// //                 <img src={item.images} className=\"card-img-top\" alt={item.name} />\n// //                 <div className=\"card-body\">\n// //                   <h5 className=\"card-title\">{item.name}</h5>\n// //                   <p className=\"card-text\">Description: {item.description}</p>\n// //                   <p className=\"card-text\">Price: ₹{item.price}</p>\n// //                   <button className=\"btn btn-danger\" onClick={() => handleRemoveItem(item.cart_id)}>Remove</button>\n// //                 </div>\n// //               </div>\n// //             </div>\n// //           ))}\n// //         </div>\n// //         <button className=\"btn btn-primary mt-4\" onClick={() => navigate('/Product')}>Back to Products</button>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Cart;\n\n// import React, { useEffect, useState } from 'react';\n// import { useLocation, useNavigate } from 'react-router-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\n\n// const Cart = () => {\n//   const [cartItems, setCartItems] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [selectedProduct, setSelectedProduct] = useState(null);\n//   const location = useLocation();\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     console.log('Fetching cart items...');\n//     const token = sessionStorage.getItem('token');\n//     fetch('http://localhost:4444/user/cart', {\n//       method: 'GET',\n//       headers: {\n//         'Authorization': `${token}`\n//       }\n//     })\n//       .then(response => {\n//         console.log('Received response:', response);\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n//         return response.json();\n//       })\n//       .then(data => {\n//         console.log('Received data:', data);\n//         setCartItems(data.data);\n//         setLoading(false);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching data:', error);\n//         setError(error);\n//         setLoading(false);\n//       });\n\n//     // Check if there's a selected product passed from the Products page\n//     if (location.state && location.state.selectedProduct) {\n//       setSelectedProduct(location.state.selectedProduct);\n//     }\n//   }, [location.state]);\n\n//   const handleRemoveItem = (cart_id) => {\n//     const token = sessionStorage.getItem('token');\n//     console.log(`Removing item with cart_id: ${cart_id}`);\n//     fetch(`http://localhost:4444/user/cart/${cart_id}`, {\n//       method: 'DELETE',\n//       headers: {\n//         'Authorization': `${token}`\n//       }\n//     })\n//       .then(response => {\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n//         console.log(`Item with cart_id: ${cart_id} removed successfully`);\n//         // Remove the item from the state\n//         setCartItems(cartItems.filter(item => item.cart_id !== cart_id));\n//       })\n//       .catch(error => {\n//         console.error('Error removing item:', error);\n//       });\n//   };\n\n//   const fetchProductDetails = (productId) => {\n//     return fetch(`http://localhost:4444/user/product/${productId}`) // Ensure the API endpoint is correct\n//       .then(response => {\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n//         return response.json();\n//       })\n//       .then(data => data.data)\n//       .catch(error => {\n//         console.error('Error fetching product details:', error);\n//         throw error;\n//       });\n//   };\n\n//   useEffect(() => {\n//     const fetchAllProductDetails = async () => {\n//       try {\n//         const updatedCartItems = await Promise.all(\n//           cartItems.map(async (item) => {\n//             const productDetails = await fetchProductDetails(item.product_id);\n//             return { ...item, ...productDetails };\n//           })\n//         );\n//         setCartItems(updatedCartItems);\n//       } catch (error) {\n//         console.error('Error fetching all product details:', error);\n//       }\n//     };\n\n//     if (cartItems.length > 0) {\n//       fetchAllProductDetails();\n//     }\n//   }, [cartItems]);\n\n//   if (loading) {\n//     return <p>Loading...</p>;\n//   }\n\n//   if (error) {\n//     return <p>Error: {error.message}</p>;\n//   }\n\n//   return (\n//     <div style={{ backgroundImage: 'url(/images/cart3.avif)', backgroundSize: 'cover', backgroundPosition: 'center', minHeight: '100vh', width: '100%', color: 'white', paddingTop: '10px' }}>\n//       <div className=\"container mt-5\">\n//         <h1 className=\"text-center mb-4\">Cart</h1>\n//         <div className=\"row\">\n//           {selectedProduct && (\n//             <div className=\"col-md-4 mb-4\">\n//               <div className=\"card h-100\">\n//                 <img src={\"Backend/uploads/image.png\"} className=\"card-img-top\" alt={selectedProduct.name} />\n//                 <div className=\"card-body\">\n//                   <h5 className=\"card-title\">{selectedProduct.name}</h5>\n//                   <p className=\"card-text\">Description: {selectedProduct.description}</p>\n//                   <p className=\"card-text\">Price: ₹{selectedProduct.price}</p>\n//                   <button className=\"btn btn-danger\" onClick={() => handleRemoveItem(selectedProduct.cart_id)}>Remove</button>\n//                   <button className=\"btn btn-secondary\" onClick={() => setSelectedProduct(null)}>Back to Cart</button>\n//                 </div>\n//               </div>\n//             </div>\n//           )}\n//           {cartItems.map(item => (\n//             <div className=\"col-md-4 mb-4\" key={item.cart_id}>\n//               <div className=\"card h-100\">\n//                 <img src={item.images} className=\"card-img-top\" alt={item.name} />\n//                 <div className=\"card-body\">\n//                   <h5 className=\"card-title\">{item.name}</h5>\n//                   <p className=\"card-text\">Description: {item.description}</p>\n//                   <p className=\"card-text\">Price: ₹{item.price}</p>\n//                   <button className=\"btn btn-danger\" onClick={() => handleRemoveItem(item.cart_id)}>Remove</button>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//         <button className=\"btn btn-primary mt-4\" onClick={() => navigate('/Product')}>Back to Products</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Cart;\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\n\nconst Cart = () => {\n  const [cartItems, setCartItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    console.log('Fetching cart items...');\n    const token = sessionStorage.getItem('token');\n    fetch('http://localhost:4444/user/cart', {\n      method: 'GET',\n      headers: {\n        'Authorization': `${token}`\n      }\n    })\n      .then(response => {\n        console.log('Received response:', response);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log('Received data:', data);\n        setCartItems(data.data);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n        setError(error);\n        setLoading(false);\n      });\n\n    // Check if there's a selected product passed from the Products page\n    if (location.state && location.state.selectedProduct) {\n      setSelectedProduct(location.state.selectedProduct);\n    }\n  }, [location.state]);\n\n  const handleRemoveItem = (cart_id) => {\n    const token = sessionStorage.getItem('token');\n    console.log(`Removing item with cart_id: ${cart_id}`);\n    fetch(`http://localhost:4444/user/cart/${cart_id}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `${token}`\n      }\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        console.log(`Item with cart_id: ${cart_id} removed successfully`);\n        // Remove the item from the state\n        setCartItems(cartItems.filter(item => item.cart_id !== cart_id));\n      })\n      .catch(error => {\n        console.error('Error removing item:', error);\n      });\n  };\n\n  const fetchProductDetails = (productId) => {\n    return fetch(`http://localhost:4444/user/product/${productId}`) // Ensure the API endpoint is correct\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => data.data)\n      .catch(error => {\n        console.error('Error fetching product details:', error);\n        throw error;\n      });\n  };\n\n  useEffect(() => {\n    const fetchAllProductDetails = async () => {\n      try {\n        const updatedCartItems = await Promise.all(\n          cartItems.map(async (item) => {\n            const productDetails = await fetchProductDetails(item.product_id);\n            return { ...item, ...productDetails };\n          })\n        );\n        setCartItems(updatedCartItems);\n      } catch (error) {\n        console.error('Error fetching all product details:', error);\n      }\n    };\n\n    if (cartItems.length > 0) {\n      fetchAllProductDetails();\n    }\n  }, [cartItems]);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>Error: {error.message}</p>;\n  }\n\n  return (\n    <div style={{ backgroundImage: 'url(/images/cart3.avif)', backgroundSize: 'cover', backgroundPosition: 'center', minHeight: '100vh', width: '100%', color: 'white', paddingTop: '10px' }}>\n      <div className=\"container mt-5\">\n        <h1 className=\"text-center mb-4\">Cart</h1>\n        <div className=\"row\">\n          {selectedProduct && (\n            <div className=\"col-md-4 mb-4\">\n              <div className=\"card h-100\">\n                <img src={\"Backend/uploads/image.png\"} className=\"card-img-top\" alt={selectedProduct.name} />\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{selectedProduct.name}</h5>\n                  <p className=\"card-text\">Description: {selectedProduct.description}</p>\n                  <p className=\"card-text\">Price: ₹{selectedProduct.price}</p>\n                  <button className=\"btn btn-danger\" onClick={() => handleRemoveItem(selectedProduct.cart_id)}>Remove</button>\n                  <button className=\"btn btn-secondary\" onClick={() => setSelectedProduct(null)}>Back to Cart</button>\n                </div>\n              </div>\n            </div>\n          )}\n          {cartItems.map(item => (\n            <div className=\"col-md-4 mb-4\" key={item.cart_id}>\n              <div className=\"card h-100\">\n              <img width={150} height={150} src={`http://localhost:4444/images/${item.images}`} className=\"card-img-top\" alt={item.name} />\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{item.name}</h5>\n                  <p className=\"card-text\">Description: {item.description}</p>\n                  <p className=\"card-text\">Price: ₹{item.price}</p>\n                  <button className=\"btn btn-danger\" onClick={() => handleRemoveItem(item.cart_id)}>Remove</button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        <button className=\"btn btn-primary mt-4\" onClick={() => navigate('/Product')}>Back to Products</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Cart;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}